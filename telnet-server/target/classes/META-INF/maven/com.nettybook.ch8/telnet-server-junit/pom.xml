<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.nettybook.ch8</groupId>
  <!-- artifactId>telnet-server</artifactId -->
  <!-- artifactId>telnet-server-spring</artifactId -->
  <artifactId>telnet-server-junit</artifactId>
  <version>0.0.3-SNAPSHOT</version>
  <name>nettybook test project</name>
  <description>메이븐을 활용한 텔넷버서 예제</description>
  
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <!-- 프로젝트에서 참조하는 라이브러리의 묶음을 관리하는 xml 엘리먼트이다. -->
  <dependencies>
  	<dependency>
  		<!-- 참조할 라이브러리의 groupID를 지정한다.
  		     보통 참고하고자 하는 라이브러리의 패키지 명을 사용한다. -->
  		<groupId>io.netty</groupId>
  		<!-- 참조할 라이브러리의 이름을 지정한다.
  		     네티는 지원하는 기능에 따라서 라이브러리가 세부적으로 나뉜다. 여기서는 모든 기능이 포함된 netty-all을 지정했다.
  		     만약 전체 패키지다 아닌 개발 패키지 라이브러리로 등록하면 메이븐 레포지터리의 io.netty 항목을 참고하자. -->
  		<artifactId>netty-all</artifactId>
  		<!-- 라이브러리로 사용할 네티의 버전을 지정한다. -->
  		<version>4.1.21.Final</version>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context</artifactId>
  		<version>3.2.3.RELEASE</version>
  	</dependency>
  	
  	<dependency>
  		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
	</dependency>
  </dependencies>
  
  <build>
  	<plugins>
  		<plugin>
  			<groupId>org.codehaus.mojo</groupId>
  			<artifactId>exec-maven-plugin</artifactId>
  			<version>1.4.0</version>
  			<executions>
  				<execution>
  					<goals>
  						<goal>java</goal>
  					</goals>
  				</execution>
  			</executions>
  			<configuration>
  				<!-- mainClass>com.nettybook.ch8.TelnetServer</mainClass -->
  				<!-- mainClass>com.nettybook.ch8.spring.TelnetServerBySpring</mainClass -->
  				<mainClass>com.nettybook.ch8.junit.TelnetServerBySpringV2</mainClass>
  			</configuration>
  		</plugin>
  	</plugins>
  </build>
</project>